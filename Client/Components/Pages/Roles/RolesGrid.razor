@page  "/Roles"

@using DevExpress.Blazor
@using Shared.Dto

@using Action = Shared.Dto.Action

@using System.Reflection
@using RemoteAppWeb.Helpers
@namespace RemoteApp.Pages.Roles


<h3 style="color: #2163ac" class="PageHeader">Roles</h3>

<div class="GridActions">
    <DxButton RenderStyle="ButtonRenderStyle.Dark" @onclick="RefreshGrid" RenderStyleMode="ButtonRenderStyleMode.Outline" Text="Actualiser" SizeMode="@SizeMode.Small" IconCssClass="undo" style="margin: 0.5em;" />
     <DxButton RenderStyle="ButtonRenderStyle.Dark" @onclick="ResetPermissions" RenderStyleMode="ButtonRenderStyleMode.Outline" Text="Réinitialiser" SizeMode="@SizeMode.Small" IconCssClass="undo" style="margin: 0.5em;" />

</div>

<DxDataGrid Data="@ListRoles"
            @ref="@grid"
            DataNavigationMode="DataGridNavigationMode.VirtualScrolling"
            PopupEditFormHeaderText="Modification"
            ShowPager="true"
            PageSize="25"
            ShowFilterRow="true"
            VerticalScrollableHeight="450"
            VerticalScrollBarMode="ScrollBarMode.Auto"
            @bind-SingleSelectedDataRow="@Role"
            RowRemoving="@(dataItem => OnRowRemoving(dataItem))"
            RowEditStart="@(dataItem => OnRowEditStarting(dataItem))"
            RowInsertStart="@(() => OnRowNewStarting())"
            CssClass="mw-1100">
    <Columns>
        <DxDataGridCommandColumn

            NewButtonVisible="@CanCreate"
            EditButtonVisible="@CanUpdate"
            DeleteButtonVisible="@CanDelete"
        
        Width="150px">
        </DxDataGridCommandColumn>
        <DxDataGridColumn Field="RoleName" Caption="Nom" />
    </Columns>
    <EditFormTemplate>
        <DxPopup Visible="PopupVisible"
                 Width="100%"
                 HorizontalAlignment="HorizontalAlignment.Center"
                 VerticalAlignment="VerticalAlignment.Top"
                 CloseOnEscape="false"
                 CloseOnOutsideClick="false">
            <HeaderTemplate Context="HeaderContext">
                <div class="custom-header bg-primary text-white w-100">
                    <span class="demo-icon-info bg-white"></span>
                    Role utilisateur
                    <a class="close-button oi oi-x text-white" href="javascript:;" aria-hidden="true"
                       role="button" aria-label="Close popup" @onclick="ClosePopup"></a>
                </div>
            </HeaderTemplate>
            <Content>
                <EditForm Model="@Role" Context="EditFormContext" OnValidSubmit="@HandleValidSubmit">
                    <DataAnnotationsValidator />
                    <div class="col-md-12" style="padding-bottom: 12px">
                        <label for="RoleName">Nom: </label>
                        <DxTextBox Id="RoleName" @bind-Text="@Role.RoleName" />
                        <ValidationMessage For="@(() => Role.RoleName)" />
                    </div>
                    <h4>Options</h4>
                   @* <div style="padding-left: 5px; padding-right: 5px;">
                        <DxCheckBox Id="TotalControle" Checked="@IsTotalControlChecked" CheckedExpression="@(() => IsTotalControlChecked)" CheckedChanged="@((bool value) => IsTotalControlCheckboxChanged(value))">
                            Contrôle total
                        </DxCheckBox>
                    </div>*@
                    @foreach (var resource in ResourceList)
                    {
                        <tr>
                            <td style="border: 1px solid #999; display: table-cell; width: 20% !important;font-weight:bold;">
                                @GetEnumDisplay(resource)
                            </td>
                           @* <td style="border: 1px solid #999; display: table-cell; width: 5% !important">
                                @{
                                    var isAllChecked = false;
                                    if (IsResourceCheckedDict.Count > 0)
                                        isAllChecked = IsResourceCheckedDict[resource];
                                }
                                <DxCheckBox Checked="@isAllChecked" CheckedExpression="@(() => isAllChecked)" CheckedChanged="@((bool value) => IsResourceCheckboxChanged(resource, value))" />
                                <label for="AllActions">(Tout)</label>
                            </td>*@
                            <td style="border: 1px solid #999; display: table-cell; width: 75% !important">
                                @{
                                    
                                    //if (IsActionCheckedDict.ContainsKey(resource))
                                    //{
                                    //    keys = IsActionCheckedDict[resource].Keys.ToList();
                                    //}
                                }

                                 @{
                                    List<Action> keys = new List<Action>();
                                    if (IsActionCheckedDict.ContainsKey(resource))
                                    {
                                        keys = IsActionCheckedDict[resource].Keys.ToList();
                                    }
                                }

                                @foreach (Action action in keys)
                                {
                                    var isActionChecked = false;
                                    var actionSelection = IsActionCheckedDict[resource];
                                    var keyVal = new KeyValuePair<Action, bool> ( action, true);
                                    if (actionSelection.Contains(keyVal) )
                                    {
                                        isActionChecked = true;

                                    }
                                    
                                    <td>
                                        <div style="padding-left: 5px; padding-right: 5px;">
                                            <DxCheckBox Checked="@isActionChecked" CheckedExpression="@(() => isActionChecked)" CheckedChanged="@((bool value) => IsActionCheckboxChanged(action, resource, value))" />
                                            <label for="ModuleAction_">@(EnumExtension.GetDisplayValue<Action>(action))</label>
                                        </div>
                                    </td>
                                }
                            </td>
                        </tr>
                    }
                    <div style="margin-top:5px;">
                        <DxButton SubmitFormOnClick="true" Text="Enregistrer" RenderStyle="ButtonRenderStyle.Secondary" />
                        <DxButton RenderStyle="ButtonRenderStyle.Primary" @onclick="ClosePopup" Text="Fermer" />
                    </div>
                </EditForm>
            </Content>
        </DxPopup>
    </EditFormTemplate>
</DxDataGrid>
