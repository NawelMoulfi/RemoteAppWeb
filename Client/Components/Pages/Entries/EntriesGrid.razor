@page "/Entries"

@inject IJSRuntime JSRuntime
@namespace RemoteApp.Pages.Entries
@using DevExpress.Blazor
@using Microsoft.AspNetCore.Mvc.RazorPages
@using Shared.Dto
@using static System.Runtime.InteropServices.JavaScript.JSType

<h3 style="color: #2163ac" class="PageHeader"> Entrées</h3>

<div class="GridActions">
    <DxButton RenderStyle="ButtonRenderStyle.Dark" @onclick="RefreshGrid" RenderStyleMode="ButtonRenderStyleMode.Outline" Text="Actualiser" SizeMode="@SizeMode.Small" IconCssClass="undo" style="margin: 0.5em;" />
</div>
<DxGrid 
        Data="Entrieslist"
        PageSize="25"
        KeyFieldName="EntryId"
        ValidationEnabled="false"
        SelectionMode="GridSelectionMode.Single"
        SelectedDataItem="@entry"
         CustomizeEditModel="Grid_CustomizeEditModel"
        EditModelSaving="Grid_EditModelSaving"
        DataItemDeleting="Grid_DataItemDeleting"
        PopupEditFormCssClass="pw-100"
        ShowGroupPanel="true"
        ShowFilterRow="true"
        ShowSearchBox="true"
        EditMode="@GridEditMode.PopupEditForm">
    <Columns>
        <DxGridCommandColumn
             NewButtonVisible="@CanCreate"
            EditButtonVisible="@CanUpdate"
            DeleteButtonVisible="@CanDelete"
            Width="160px" />
       <DxGridDataColumn Width="80px" FieldName="EntryId"  Caption="Ouvrir commande" >
         <CellDisplayTemplate>
                <a class="d-block text-left" href="javascript:;" @onclick="() => OpenCommand(context)">Ouvrir</a>
            </CellDisplayTemplate>
         </DxGridDataColumn>
        <DxGridDataColumn Width="180px" FieldName="Folder.FolderName"
                          Caption="Dossier" >
        </DxGridDataColumn>
        <DxGridDataColumn Width="180px" FieldName="EntryName" Caption="Nom entrée" />
        
        <DxGridDataColumn Width="180px" FieldName="EntryTypeInt"
                                  Caption="Type">
            <FilterRowCellTemplate>
                <DxComboBox Value="(int?)context.FilterRowValue"
                            ValueChanged="(int? v) => context.FilterRowValue = v"
                            Data="EntryTypes" ValueFieldName="Value" TextFieldName="Key"
                            FilteringMode="DataGridFilteringMode.Contains"
                            ClearButtonDisplayMode="DataEditorClearButtonDisplayMode.Auto" />
            </FilterRowCellTemplate>
            <CellDisplayTemplate>
                @{
                 var type = (context.DataItem as EntryDto).EntryType.ToString();
                  }
                  <span class="my-date-style">@type</span>
            </CellDisplayTemplate>
           
        </DxGridDataColumn>

        <DxGridDataColumn Width="180px" FieldName="ID" Caption="ID" />

        
       
    </Columns>
    <EditFormTemplate  Context="EditFormContext">
        @{
            var _entry = (EntryDto)EditFormContext.EditModel;
        }
        <DataAnnotationsValidator />
        <ValidationSummary />
        <DxFormLayout CssClass="w-100">
            <DxFormLayoutItem Caption="Nom entrée:" ColSpanMd="6">
                <DxTextBox @bind-Text="@_entry.EntryName" />
                <ValidationMessage For="@(() => _entry.EntryName)" />
            </DxFormLayoutItem>
            <DxFormLayoutItem Caption="Type:" ColSpanMd="6">
                <DxComboBox  NullText="Selectionner ..."
                             ClearButtonDisplayMode="DataEditorClearButtonDisplayMode.Auto"
                             Data="EntryTypes"
                             TextFieldName="Key"
                             ValueFieldName="Value"
                             @bind-Value="@_entry.EntryType" />
                <ValidationMessage For="@(() => _entry.EntryType)" />
            </DxFormLayoutItem>

            <DxFormLayoutItem Caption="ID:" ColSpanMd="6">
                <DxTextBox @bind-Text="@_entry.ID" />
                <ValidationMessage For="@(() => _entry.ID)" />
            </DxFormLayoutItem>

            <DxFormLayoutItem Caption="Mot de passe:" ColSpanMd="6">
                <DxTextBox @bind-Text="@_entry.Password" />
                <ValidationMessage For="@(() => _entry.Password)" />
            </DxFormLayoutItem>

            <DxFormLayoutItem Caption="Utilisateur:" ColSpanMd="6">
                <DxComboBox  NullText="Selectionner ..."
                             ClearButtonDisplayMode="DataEditorClearButtonDisplayMode.Auto"
                             Data="UsersList"
                             TextFieldName="UserNomPrenom"
                             ValueFieldName="UserId"
                             @bind-Value="@_entry.CreatedByUserId" />
                <ValidationMessage For="@(() => _entry.CreatedByUserId)" />
            </DxFormLayoutItem>

             <DxFormLayoutItem Caption="Dossier:" ColSpanMd="6">
                 <DxComboBox  NullText="Selectionner ..."
                              ClearButtonDisplayMode="DataEditorClearButtonDisplayMode.Auto"
                              Data="Folderslist"
                              TextFieldName="FolderName"
                              ValueFieldName="FolderId"
                              @bind-Value="@_entry.FolderId" />
                 <ValidationMessage For="@(() => _entry.FolderId)" />
            </DxFormLayoutItem>

           <DxFormLayoutItem Caption="Adresse:" ColSpanMd="6">
                <DxTextBox @bind-Text="@_entry.Address" />
                <ValidationMessage For="@(() => _entry.Address)" />
            </DxFormLayoutItem>

             <DxFormLayoutItem Caption="URL:" ColSpanMd="6">
                <DxTextBox @bind-Text="@_entry.URL" />
                <ValidationMessage For="@(() => _entry.URL)" />
            </DxFormLayoutItem>

            <DxFormLayoutItem Caption="Description:" ColSpanMd="6">
                <DxTextBox @bind-Text="@_entry.Description" />
                <ValidationMessage For="@(() => _entry.Description)" />
            </DxFormLayoutItem>

             <DxFormLayoutItem Caption="Commande:" ColSpanMd="6">
                <DxTextBox @bind-Text="@_entry.Command" />
                <ValidationMessage For="@(() => _entry.Command)" />
            </DxFormLayoutItem>

             <DxFormLayoutItem Caption="Status:" ColSpanMd="6">
                 <DxComboBox  NullText="Selectionner ..."
                              ClearButtonDisplayMode="DataEditorClearButtonDisplayMode.Auto"
                              Data="EntryStatuses"
                              TextFieldName="Key"
                              ValueFieldName="Value"
                              @bind-Value="@_entry.EntryStatus" />
                 <ValidationMessage For="@(() => _entry.EntryStatus)" />
            </DxFormLayoutItem>

        </DxFormLayout>
    </EditFormTemplate>
</DxGrid>




<style>
    .closePassPop {
        position: absolute;
        bottom: -50px;
        height: 32px;
        font-size: 14px;
        line-height: 13px;
        right: 90px;
    }

    .passInput {
        padding: 0;
    }

    .RolePopup {
        max-width: 50% !important;
    }

    a.close-button {
        float: right;
        right: 10px;
    }

    .custom-header {
        height: 45px;
        padding: 10px;
    }

    .RolePopup .row {
        height: 50px;
    }

    .editPassBtn {
        font-size: 14px;
        height: 30px;
    }

    .my-style {
        min-width: 80%;
        vertical-align: middle;
    }
</style>


